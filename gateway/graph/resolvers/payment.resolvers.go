package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"handworks-gateway/graph/generated/models"
	"handworks-gateway/graph/resolvers/helpers"
	"handworks/common/grpc/booking"
	"handworks/common/grpc/payment"
)

// GetQuotation is the resolver for the getQuotation field.
func (r *queryResolver) GetQuotation(ctx context.Context, custID string, service models.ServicesInput, addons []*models.AddOnInput) (*models.Quote, error) {
	serviceProto := &booking.ServicesRequest{
		ServiceType: helpers.MapMainServiceType(service.ServiceType),
		Details:     helpers.MapServiceDetailInput(&service),
	}
	addonsProto := make([]*booking.AddOnRequest, len(addons))
	for i, a := range addons {
		addonService := &booking.ServicesRequest{
			ServiceType: helpers.MapMainServiceType(a.Service.ServiceType),
			Details:     helpers.MapServiceDetailInput(a.Service),
		}
		addonsProto[i] = &booking.AddOnRequest{
			ServiceDetail: addonService,
		}
	}
	quoteReq := &payment.QuoteRequest{
		CustId:  custID,
		Service: serviceProto,
		Addons:  addonsProto,
	}
	res, err := r.GrpcClients.PaymentClient.GetQuotation(ctx, quoteReq)
	if err != nil {
		r.Log.Error("Failed to dial payment rpc: %s", err)
	}
	r.Log.Info("Contacted Payment Service Succesfully")
	return helpers.MapQuote(res), nil
}
