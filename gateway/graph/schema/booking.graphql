
input AddressInput {
  addressHuman: String!
  addressLat: Float!
  addressLng: Float!
}

input GeneralCleaningDetailsInput {
  homeType: String!  # "CONDO_ROOM", "HOUSE", "COMMERCIAL"
  sqm: Int!
}

input CouchCleaningSpecificationsInput {
  couchType: String!
  widthCm: Int!
  depthCm: Int!
  heightCm: Int!
  quantity: Int!
}

input CouchCleaningDetailsInput {
  cleaningSpecs: [CouchCleaningSpecificationsInput!]!
  bedPillows: Int!
}

input MattressCleaningSpecificationsInput {
  bedType: String!
  widthCm: Int!
  depthCm: Int!
  heightCm: Int!
  quantity: Int!
}

input MattressCleaningDetailsInput {
  cleaningSpecs: [MattressCleaningSpecificationsInput!]!
}

input CarCleaningSpecificationsInput {
  carType: String!
  quantity: Int!
}

input CarCleaningDetailsInput {
  cleaningSpecs: [CarCleaningSpecificationsInput!]!
  childSeats: Int
}

input PostConstructionCleaningDetailsInput {
  sqm: Int!
}

# ServiceDetailInput maps the oneof
input ServiceDetailInput {
  general: GeneralCleaningDetailsInput
  couch: CouchCleaningDetailsInput
  mattress: MattressCleaningDetailsInput
  car: CarCleaningDetailsInput
  post: PostConstructionCleaningDetailsInput
}

input ServicesInput {
  serviceType: String!
  details: ServiceDetailInput!
}

input AddOnInput {
  service: ServicesInput!
}

input BaseBookingDetailsInput {
  custId: ID!
  customerFirstName: String!
  customerLastName: String!
  address: AddressInput!
  startSched: Time!
  endSched: Time!
  dirtyScale: Int!
  paymentStatus: String!
  reviewStatus: String!
  photos: [String!]!
  quoteId: ID
}

input CreateBookingInput {
  base: BaseBookingDetailsInput!
  mainService: ServicesInput!
  addons: [AddOnInput!]!
}

# --- Output Types ---

type Address {
  addressHuman: String!
  addressLat: Float!
  addressLng: Float!
}

type GeneralCleaningDetails {
  homeType: String!
  sqm: Int!
}

type CouchCleaningSpecifications {
  couchType: String!
  widthCm: Int!
  depthCm: Int!
  heightCm: Int!
  quantity: Int!
}

type CouchCleaningDetails {
  cleaningSpecs: [CouchCleaningSpecifications!]!
  bedPillows: Int
}

type MattressCleaningSpecifications {
  bedType: String!
  widthCm: Int!
  depthCm: Int!
  heightCm: Int!
  quantity: Int!
}

type MattressCleaningDetails {
  cleaningSpecs: [MattressCleaningSpecifications!]!
}

type CarCleaningSpecifications {
  carType: String!
  quantity: Int!
}

type CarCleaningDetails {
  cleaningSpecs: [CarCleaningSpecifications!]!
  childSeats: Int
}

type PostConstructionCleaningDetails {
  sqm: Int!
}

# OneOf mapping as nullable fields
type ServiceDetail {
  general: GeneralCleaningDetails
  couch: CouchCleaningDetails
  mattress: MattressCleaningDetails
  car: CarCleaningDetails
  post: PostConstructionCleaningDetails
}

type Services {
  id: ID!
  serviceType: String!
  details: ServiceDetail!
}

type AddOn {
  id: ID!
  serviceDetail: Services!
  price: Float!
}

type CleanerAssigned {
  id: ID!
  cleanerFirstName: String!
  cleanerLastName: String!
  pfpUrl: String
}

type CleaningEquipment {
  id: ID!
  name: String!
  type: String!
  photoUrl: String
}

type CleaningResources {
  id: ID!
  name: String!
  type: String!
  photoUrl: String
}

type BaseBookingDetails {
  id: ID!
  custId: ID!
  customerFirstName: String!
  customerLastName: String!
  address: Address!
  startSched: Time!
  endSched: Time!
  dirtyScale: Int!
  paymentStatus: String!
  reviewStatus: String!
  photos: [String!]!
  quoteId: ID
}

type Booking {
  id: ID!
  base: BaseBookingDetails!
  mainService: Services!
  addons: [AddOn!]!
  equipment: [CleaningEquipment!]!
  resources: [CleaningResources!]!
  cleaners: [CleanerAssigned!]!
  totalPrice: Float!
}

# --- Queries & Mutations ---
extend type Query {
  getBookingById(bookingId: ID!): Booking
  getBookingByUId(userId: ID!): [Booking!]!
}

extend type Mutation {
  createBooking(input: CreateBookingInput!): Booking!
  updateBooking(input: CreateBookingInput!): Booking!   # reuse input for simplicity
  deleteBooking(bookingId: ID!): Boolean!
}
